// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using bio_eko_fit_database;

namespace bio_eko_fit_database.Migrations
{
    [DbContext(typeof(BioEkoFitContext))]
    [Migration("20190219180122_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("bio_eko_fit_database.Entities.DishEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.DishForMenuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DishId");

                    b.Property<int>("MenuId");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("MenuId");

                    b.ToTable("DishesForMenus");
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.MenuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.ProductForDishEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DishId");

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductWeight")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsForDishes");
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.StepEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("DishId");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.DishForMenuEntity", b =>
                {
                    b.HasOne("bio_eko_fit_database.Entities.DishEntity", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bio_eko_fit_database.Entities.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.ProductForDishEntity", b =>
                {
                    b.HasOne("bio_eko_fit_database.Entities.DishEntity", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bio_eko_fit_database.Entities.ProductEntity", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("bio_eko_fit_database.Entities.StepEntity", b =>
                {
                    b.HasOne("bio_eko_fit_database.Entities.DishEntity", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
